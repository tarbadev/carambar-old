stages:
- test
- package
- integration-tests


android-env: &android-env
  os: linux
  language: android
  licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'
  android:
    components:
    - tools
    - platform-tools
    - build-tools-28.0.3
    - android-28
    - sys-img-armeabi-v7a-google_apis-28
    - extra-android-m2repository
    - extra-google-m2repository
    - extra-google-android-support
    - sys-img-x86-android-28
  jdk: oraclejdk8
  sudo: false
  addons:
    apt:
      sources:
      - ubuntu-toolchain-r-test
      packages:
      - libstdc++6
      - fonts-droid
  before_script:
  - ./ci/setupFlutter.sh

#  ios-env: &ios-env
#    os: osx
#    language: generic
#    osx_image: xcode10.1
#    before_script:
#    - ./ci/ios/setupEnvironment.sh
#    - ./ci/setupFlutter.sh

matrix:
  include:
  - stage: test
      os: linux
      language: generic
      sudo: false
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - libstdc++6
          - fonts-droid
      before_script:
      - ./ci/setupFlutter.sh
      script:
      - ./flutter/bin/flutter test ./test

  - stage: package
    <<: *android-env
    script: ./flutter/bin/flutter -v build apk --debug
  - stage: integration-tests
    <<: *android-env
    script: ./flutter/bin/flutter drive --target=test_driver/app.dart --debug

#  - stage: package
#    <<: *ios-env
#    script: ./flutter/bin/flutter -v build ios --no-codesign --debug
#  - stage: integration-tests
#    <<: *ios-env
#    script: ./flutter/bin/flutter drive --target=test_driver/app.dart --debug

cache:
  directories:
  - $HOME/.pub-cache